#!/bin/bash

# deploy B-2-1 st1lntmike03 SSVM-OEL8 2 4 10.5.106-VLAN673-DvS 100

# st1 NETs - 10.5.32-VLAN540-DvS 10.5.106-VLAN673-DvS 10.5.4-VLAN421-DvS
# st1 VLANS - VLAN540 10.5.32.0/22  'ST1 - Weblogic'
#             VLAN673 10.5.106.0/23 'vlan673_vmware_management'
#	      VLAN421 10.5.4.0/22   'vlan 421- linux_421'

# ev3 NETs - 10.2.32-VLAN540-DvS 10.4.106-VLAN673-DvS 10.2.4-VLAN421-DvS             
# ev3 VLANS - VLAN540 10.2.32.0/22  'EV3 - Weblogic'
#             VLAN673 10.4.106.0/23 'vlan673_vmware_management'
#             VLAN421 10.2.4.0/22   'vlan 421- linux_421

# function for getting datastore from cluster
get_ds() {
	local arg=$1
	CL=$(echo ${1,,} | sed 's/-//g')
	govc datastore.cluster.info|grep Name|grep $CL |awk '{print $2}'
}

CL=$1
VM=$2
OS=$3
CPU=$4
MEM=$(($5*1024))
VLAN=$6
DISK=$7

if [[ $VM =~ ^st1 ]]; then
  DC=st1
  if [[ "$VLAN" = "VLAN540" ]]; then
    NET=10.5.32-VLAN540-DvS
    NM=25.255.252.0
  elif [[ "$VLAN" = "VLAN673" ]]; then
    NET=10.5.106-VLAN673-DvS
    NM=25.255.254.0
  elif [[ "$VLAN" = "VLAN421" ]]; then
    NET=10.5.4-VLAN421-DvS
    NM=25.255.252.0
  else
    echo "$VLAN is not a valid VLAN"
    exit 1
  fi
  export GOVC_URL=https://st1vccomp01a.corp.pvt	
else
  DC=ev3
  if [[ "$VLAN" = "VLAN540" ]]; then
    NET=10.2.32-VLAN540-DvS
    NM=25.255.252.0
  elif [[ "$VLAN" = "VLAN673" ]]; then
    NET=10.4.106-VLAN673-DvS
    NM=25.255.254.0
  elif [[ "$VLAN" = "VLAN421" ]]; then
    NET=10.2.4-VLAN421-DvS
    NM=25.255.252.0
  else
    echo "$VLAN is not a valid VLAN"
    exit 1
  fi
  export GOVC_URL=https://ev3vccomp01a.corp.pvt	
fi

export GOVC_USERNAME=mk7193
export GOVC_PASSWORD=Mrkamk2021#

# deploy VM by cloning template
DSC=$(get_ds ${CL})
echo "Deploying $VM to $CL"
echo govc vm.clone -on=false -vm $OS -c $CPU -m $MEM -net $NET -pool /st1dccomp01/host/${CL}/Resources -datastore-cluster ${DSC} -folder '/st1dccomp01/vm/vRA - Thryv Cloud/TESTING' $VM

exit 0

# edit boot disk to match requested size
if [[ "DISK" -gt "100" ]] && [[ "$OS" = "SSVM-OEL8 ]]; then
  echo "edit boot disk size"
  govc vm.disk.change -vm $VM -disk.name "disk-1000-0" -size 120G
else 
  echo "Disk size is default, no resize needed"
fi

# Get mac address of VM 
echo -n "Getting mac address"
MAC=$(govc vm.info -json $VM | jq -r '.virtualMachines[].config.hardware.device[] | select(.macAddress != null) | .macAddress')
echo " - $MAC"

# add vm to DNS
echo "Adding VM to DNS"
IP=$(python ./eip_shell.py --dc $DC --network $VLAN --hostname ${VM}.corp.pvt --mac $MAC 2> /dev/null | tail -1)

# make sure VM is off and customize hotname and IP
echo "Customizing hostname, and IP"
GW="${NET%%-*}.1"
govc vm.power -off -force $VM
govc vm.customize -vm $VM -type Linux -name $VM -domain corp.pvt --mac $MAC -ip $IP -netmask $NM -gateway $GW

# create iso for cloud-init and mount it into the VM for first boot
echo "Creating ISO for cloud-init and mounting it to the VM"
DATE=$(date +%Y-%m-%dT%H:%M:%S)
CD=$(govc device.ls -vm $VM |grep cdrom | awk '{print $1}')
cat <<EOF >/tmp/ovf-env.xml
<?xml version="1.0" encoding="UTF-8"?>
<Environment
     xmlns="http://schemas.dmtf.org/ovf/environment/1"
     xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
     xmlns:oe="http://schemas.dmtf.org/ovf/environment/1"
     xmlns:ve="http://www.vmware.com/schema/ovfenv"
     oe:id=""
     ve:vCenterId="vm-1711886">
   <PlatformSection>
      <Kind>VMware ESXi</Kind>
      <Version>8.0.3</Version>
      <Vendor>VMware, Inc.</Vendor>
      <Locale>en_US</Locale>
   </PlatformSection>
   <PropertySection>
         <Property oe:key="user-data" oe:value="$USERDATA"/>
   </PropertySection>
   <ve:EthernetAdapterSection>
      <ve:Adapter ve:mac="$MAC" ve:network="$NET" ve:unitNumber="7"/>
   </ve:EthernetAdapterSection>
</Environment>
EOF


govc device.cdrom.insert -vm $VM i-device cdrom-16000 -ds $DS cloud-init/${VM}.iso
govc device.connect -vm $VM cdrom-16000
